<UserControl x:Class="Genesyslab.Desktop.Modules.YoutubeWorkItem.Controls.YoutubeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:common="clr-namespace:Genesyslab.Desktop.Modules.Sdr.Common.Controls;assembly=Genesyslab.Desktop.Modules.Sdr.Common"
             xmlns:Controls="clr-namespace:Genesyslab.Desktop.Modules.YoutubeWorkItem.Controls">
    <FrameworkElement.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Genesyslab.Desktop.Modules.YoutubeWorkItem;component/Resources/YoutubeMainStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        </ResourceDictionary>
    </FrameworkElement.Resources>

    <Grid Margin="1" x:Name="myGrid" VerticalAlignment="Stretch" Background="WhiteSmoke">
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Your existing controls remain unchanged -->
        <common:Header Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="1" 
                       Background="White"
                       HeaderImageSource="pack://application:,,,/Genesyslab.Desktop.Modules.YoutubeWorkItem;component/Images/YoutubeLogo.png"/>

        <Controls:Post Grid.Column="0" Grid.Row="1" Width="550" x:Name="PostControl" DataContext="{Binding Post}" 
                       HorizontalAlignment="Left"/>

        <Controls:Comment Grid.Row="2" Grid.Column="0" x:Name="InComment" Width="550" HorizontalAlignment="Left" Padding="6 0"
                          SendButtonVisibility="Collapsed" DataContext="{Binding InComment}" Loaded="InComment_Loaded" />

        <ItemsControl Name="icTodoList" Grid.Row="3" Grid.Column="0" Margin="29 10 10 0" HorizontalAlignment="Left" 
              Height="Auto" ItemsSource="{Binding ReplyMessages}" Background="Transparent">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Controls:Comment Width="521" HorizontalAlignment="Left" Padding="6 0" 
                                      SendClick="OutComment_SendClick"
                                      DeleteClick="InComment_DeleteClick"
                                      DeleteButtonVisibility="{Binding Comment.DeleteButtonVisibilty}"
                                      SendButtonVisibility="{Binding SendButtonVisibility}"
                                      ReplyButtonVisibility="Collapsed"
                                      LikeButtonVisibility="Collapsed"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <ItemsControl Name="OutCommentsList" Grid.Row="4" Grid.Column="0" Margin="0 10 10 0" HorizontalAlignment="Left" 
              Height="Auto" ItemsSource="{Binding OutComments}" Background="Transparent">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Controls:Comment Width="550" HorizontalAlignment="Left" Padding="6 0" 
                                      SendClick="OutComment_SendClick"
                                      ReplyButtonVisibility="Collapsed"
                                      LikeButtonVisibility="Collapsed"
                                      DeleteClick="InComment_DeleteClick"
                                      SendButtonVisibility="{Binding SendButtonVisibility}"
                                      DeleteButtonVisibility="{Binding DeleteButtonVisibilty}"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <Controls:AddComment x:Name="AddCommentControl" Grid.Row="5"
                             VerticalAlignment="Center" HorizontalAlignment="Left"
                             Visibility="Collapsed" DataContext="{Binding AddComment}"/>

        <!--  Loading Overlay -->
        <Grid x:Name="LoadingOverlay" Grid.Row="0" Grid.RowSpan="6" 
      Background="#40FFFFFF" Visibility="Collapsed">
            <Grid.RenderTransform>
                <ScaleTransform x:Name="LoadingScale" ScaleX="0.3" ScaleY="0.3"/>
            </Grid.RenderTransform>

            <Grid Width="100" Height="100">
                <!-- Outer spinning ring -->
                <Ellipse Width="100" Height="100" StrokeThickness="4" x:Name="OuterSpinner">
                    <Ellipse.Stroke>
                        <LinearGradientBrush>
                            <GradientStop Color="#FFFF8C42" Offset="0"/>
                            <GradientStop Color="#40FF8C42" Offset="1"/>
                        </LinearGradientBrush>
                    </Ellipse.Stroke>
                    <Ellipse.RenderTransform>
                        <RotateTransform x:Name="SpinnerRotation" CenterX="50" CenterY="50"/>
                    </Ellipse.RenderTransform>
                </Ellipse>

                <!-- Middle spinning ring -->
                <Ellipse Width="80" Height="80" StrokeThickness="3" x:Name="MiddleSpinner">
                    <Ellipse.Stroke>
                        <LinearGradientBrush>
                            <GradientStop Color="#FFFFA366" Offset="0"/>
                            <GradientStop Color="#40FFA366" Offset="1"/>
                        </LinearGradientBrush>
                    </Ellipse.Stroke>
                    <Ellipse.RenderTransform>
                        <RotateTransform x:Name="MiddleSpinnerRotation" CenterX="40" CenterY="40" Angle="45"/>
                    </Ellipse.RenderTransform>
                </Ellipse>

                <!-- Inner pulsing circle -->
                <Ellipse Width="60" Height="60" x:Name="InnerCircle">
                    <Ellipse.Fill>
                        <RadialGradientBrush>
                            <GradientStop Color="#40FFB380" Offset="0"/>
                            <GradientStop Color="Transparent" Offset="1"/>
                        </RadialGradientBrush>
                    </Ellipse.Fill>
                    <Ellipse.RenderTransform>
                        <ScaleTransform x:Name="PulseTransform" CenterX="30" CenterY="30"/>
                    </Ellipse.RenderTransform>
                </Ellipse>
            </Grid>

            <Grid.Resources>
                <Storyboard x:Key="ShowLoadingAnimation">
                    <!-- Fade in -->
                    <DoubleAnimation 
                Storyboard.TargetName="LoadingOverlay"
                Storyboard.TargetProperty="Opacity"
                From="0" To="1" Duration="0:0:0.3">
                        <DoubleAnimation.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>

                    <!-- Scale up -->
                    <DoubleAnimation 
                Storyboard.TargetName="LoadingScale"
                Storyboard.TargetProperty="ScaleX"
                From="0.3" To="1" Duration="0:0:0.4">
                        <DoubleAnimation.EasingFunction>
                            <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="3"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation 
                Storyboard.TargetName="LoadingScale"
                Storyboard.TargetProperty="ScaleY"
                From="0.3" To="1" Duration="0:0:0.4">
                        <DoubleAnimation.EasingFunction>
                            <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="3"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>

                    <!-- Outer ring rotation -->
                    <DoubleAnimation 
                Storyboard.TargetName="SpinnerRotation"
                Storyboard.TargetProperty="Angle"
                From="0" To="360" Duration="0:0:2"
                RepeatBehavior="Forever"/>

                    <!-- Middle ring rotation (opposite direction) -->
                    <DoubleAnimation 
                Storyboard.TargetName="MiddleSpinnerRotation"
                Storyboard.TargetProperty="Angle"
                From="360" To="0" Duration="0:0:1.5"
                RepeatBehavior="Forever"/>

                    <!-- Inner circle pulse -->
                    <DoubleAnimation 
                Storyboard.TargetName="PulseTransform"
                Storyboard.TargetProperty="ScaleX"
                From="0.8" To="1.2" Duration="0:0:1"
                AutoReverse="True"
                RepeatBehavior="Forever">
                        <DoubleAnimation.EasingFunction>
                            <SineEase EasingMode="EaseInOut"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation 
                Storyboard.TargetName="PulseTransform"
                Storyboard.TargetProperty="ScaleY"
                From="0.8" To="1.2" Duration="0:0:1"
                AutoReverse="True"
                RepeatBehavior="Forever">
                        <DoubleAnimation.EasingFunction>
                            <SineEase EasingMode="EaseInOut"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </Storyboard>

                <Storyboard x:Key="HideLoadingAnimation">
                    <!-- Fade out -->
                    <DoubleAnimation 
                Storyboard.TargetName="LoadingOverlay"
                Storyboard.TargetProperty="Opacity"
                From="1" To="0" Duration="0:0:0.2">
                        <DoubleAnimation.EasingFunction>
                            <CircleEase EasingMode="EaseIn"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>

                    <!-- Scale down with bounce -->
                    <DoubleAnimation 
                Storyboard.TargetName="LoadingScale"
                Storyboard.TargetProperty="ScaleX"
                To="0.3" Duration="0:0:0.3">
                        <DoubleAnimation.EasingFunction>
                            <BounceEase EasingMode="EaseIn"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation 
                Storyboard.TargetName="LoadingScale"
                Storyboard.TargetProperty="ScaleY"
                To="0.3" Duration="0:0:0.3">
                        <DoubleAnimation.EasingFunction>
                            <BounceEase EasingMode="EaseIn"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </Storyboard>
            </Grid.Resources>
        </Grid>
    </Grid>
</UserControl>